{"version":3,"sources":["components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/FilterContacts/FilterContacts.js","App.js","index.js","components/ContactList/ContactList.module.css","components/FilterContacts/FilterContacts.module.css"],"names":["module","exports","Section","title","children","className","s","ContactForm","state","name","number","inputChange","e","currentTarget","value","setState","resetForm","formSubmit","preventDefault","props","onSubmit","form","this","label","placeholder","input","type","pattern","required","onChange","button","Component","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","FilterContact","App","filter","addContact","newContact","contact","uuidv4","filterContact","getContactsLis","toLowerCase","includes","deleteContact","contactId","prevState","contactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0df550a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2r-LZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__j5VjL\",\"label\":\"ContactForm_label__r5Ixo\",\"input\":\"ContactForm_input__2iGhQ\",\"button\":\"ContactForm_button__3DB14\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n\r\ninputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n    };\r\n    \r\nresetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n    };\r\n\r\n\r\nformSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  \r\n    \r\nrender() {\r\n        return (\r\n            <form className={s.form} onSubmit={this.formSubmit}>\r\n                <label className={s.label}>Name\r\n                    <input\r\n                        placeholder=\"type name\"\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={this.state.name}\r\n                        onChange={this.inputChange}\r\n                    />\r\n                </label>\r\n\r\n                <label className={s.label}>Number\r\n                    <input\r\n                        placeholder=\"type number\"\r\n                        className={s.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={this.state.number}\r\n                        onChange={this.inputChange}\r\n                    />\r\n                </label>\r\n                \r\n\r\n                <button type=\"submit\" className={s.button}>\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts,  onDeleteContact }) => (\r\n    <ul className={s.list}>\r\n    {contacts.map(({id, name, number}) =>\r\n      <li className={s.item} key={id}>\r\n        {name}: {number}\r\n        <button\r\n          className={s.button}\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n   )}\r\n    </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n onDeleteContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './FilterContacts.module.css';\r\n\r\nconst FilterContact = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <label className={s.label}>Find contacts by name\r\n        <input\r\n          placeholder=\"type name\"\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          title=\"Search contacts\"\r\n          value={value}\r\n          onChange={onChange}\r\n      /></label>\r\n    </>\r\n  );\r\n};\r\n\r\nFilterContact.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default FilterContact;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Section from './components/Section/Section';\nimport Form from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport FilterContact from './components/FilterContacts/FilterContacts';\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },],\n    filter: '',\n  };\n\n  addContact = newContact => {\n     const contact = {\n      id: uuidv4(),\n      name: newContact.name,\n      number:newContact.number,\n    };\n    this.setState(({ contacts }) => ({ contacts: [...contacts, contact] }));\n  }\n    \n\n  filterContact = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getContactsLis = () => {\n\t\tconst { contacts, filter } = this.state\n\t\treturn contacts.filter((contact) =>\n\t\t\tcontact.name.toLowerCase().includes(filter.toLowerCase())\n\t\t)\n\t}\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  //checkContact = name => {\n\t//\tconst { contacts } = this.state\n\n\t//\tconst inContact = contacts.find((contact) => contact.name === name)\n\t//\tinContact && alert('{name} is already in contacts')\n\n\t//\treturn !inContact\n//\t}\n\n    render(){\n      const contactsList = this.getContactsLis();\n      return (\n        <>\n          <h1>Phonebook</h1>\n          <Section>\n            <Form\n              onSubmit={this.addContact}\n             // onCheckContact={this.checkContact}\n            />\n          </Section>\n          <Section title=\"Contacts\">\n            <FilterContact\n              value={this.state.filter}\n              onChange={this.filterContact}\n            />\n            <ContactList\n              contacts={contactsList}\n              onDeleteContact={this.deleteContact} />\n          </Section>\n        </>\n      );\n    }\n  }\n  \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Wbq7\",\"item\":\"ContactList_item__2bP0z\",\"button\":\"ContactList_button__ql32C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContacts_label__1jIWX\",\"input\":\"FilterContacts_input__3Uw2j\"};"],"sourceRoot":""}